-- Implementação de uma consulta aninhada:
select * from PRODUTO
where not exists(
	select 1
	from CLIENTE
	where ID_CLIENTE = 1000
);
-- NESSA CONSULTA, NÃO IRÁ RETORNAR NADA, POIS A TABELA CLIENTE POSSUI VALOR COM O 'ID_CLIENTE' = 1000.

-- CONSULTA QUE UTILIZA PRODUTO CARTESIANO:
SELECT COUNT(S.NUMERO_DO_SERVICO) AS NUMERO_DE_SERVICOS, C.NOME AS NOME_DO_CLIENTE
FROM SERVICO_FEITO S, CLIENTE C
WHERE S.CLIENTE_CORRESPONDENTE = C.ID_CLIENTE
GROUP BY C.CLIENTE_CORRESPONDENTE;

-- CONSULTA QUE UTILIZA FUNÇÕES DE AGREGAÇÃO:
SELECT AVG(PRECO_DO_PRODUTO) AS MEDIA_DOS_PRECOS, COUNT(ID_PRODUTO) AS NUMERO_DE_PRODUTOS
FROM PRODUTO;

-- CONSULTAS QUE USAM PARÂMETROS DE PREDICADOS:
SELECT * FROM PRODUTO
WHERE ID_PRODUTO > 10 AND ID_PRODUTO < 20;

SELECT NOME_COMPLETO FROM CLIENTE
WHERE IDADE = 40 OR IDADE = 20;

SELECT ID_SERVICO_FEITO AS ID_DO_SERVICO
FROM SERVICO_FEITO
WHERE NUMERO_DO_SERVICO != 10;

SELECT S.CLIENTE_CORRESPONDENTE AS NUMERO_CLIENTE, C.NOME_COMPLETO 
FROM SERVICO_FEITO S, CLIENTE C
WHERE DATA_DE_REALIZACAO BETWEEN '2024-11-01' AND '2024-12-01'
GROUP BY CLIENTE_CORRESPONDENTE, NOME_COMPLETO;

-- CONSULTAS QUE USAM AGRUPAMENTO E ORDENAÇÃO:
SELECT A.PET_RELACIONADO AS NUMERO_DO_PET, P.NOME_DO_PET 
FROM AGENDA_DO_VETERINARIO A, PET P
WHERE PET_RELACIONADO = ID_DO_PET
ORDER BY PET_RELACIONADO;

SELECT A.DATA_DO_REGISTRO AS DATA_DA_CONSULTA, P.APELIDO AS APELIDO_DO_PET
FROM AGENDA_DO_VETERINARIO A, PET P
WHERE A.PET_RELACIONADO = P.ID_DO_PET
GROUP BY A.DATA_DO_REGISTRO, P.APELIDO;

-- ****** IMPLEMENTANDO STORES PROCEDURES ************:

-- PROCEDURE QUE OBTÉM A SOMA DOS VALORES DE PRODUTOS COMPRADOS POR DETERMINADO CLIENTE QUE SERÁ PASSADO POR PARÂMETRO:
DELIMITER $$
CREATE PROCEDURE OBTER_GASTOS_COM_PRODUTOS(IN ID_DO_CLIENTE INT)
BEGIN
	-- VARIÁVEL QUE ARMAZENARÁ O VALOR DAS SOMAS:
    DECLARE SOMA_DOS_GASTOS DECIMAL(10, 2);
	
    -- OBTENDO A SOMA DOS VALORES:
    SELECT SUM(VALOR_DA_VENDA) INTO SOMA_DOS_GASTOS
    FROM VENDA_FEITA
    WHERE CLIENTE_COMPRADOR = ID_DO_CLIENTE;
    
    -- EXIBINDO VALORES:
	SELECT SOMA_DOS_GASTOS;
END $$

DELIMITER ;

-- IMPLEMENTAR OUTRA STORE PROCEDURE.




